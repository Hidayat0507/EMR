rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    // Example role claims set via Firebase custom claims: auth.token.role in [admin, doctor, nurse, billing]
    function hasAnyRole(roles) {
      return isSignedIn() && (request.auth.token.role in roles);
    }

    // Default: deny everything
    match /{document=**} {
      allow read, write: if false;
    }

    // Patients collection
    match /patients/{patientId} {
      allow read: if isSignedIn();
      allow write: if hasAnyRole(['admin', 'doctor', 'nurse']);
    }

    // Consultations collection
    match /consultations/{consultationId} {
      allow read: if isSignedIn();
      allow create: if hasAnyRole(['admin', 'doctor']);
      allow update: if hasAnyRole(['admin', 'doctor']);
      allow delete: if hasAnyRole(['admin']);
    }

    // Settings collection (org details, logo)
    match /settings/{docId} {
      allow read: if isSignedIn();
      allow write: if hasAnyRole(['admin']);
    }

    // Procedures & Charges
    match /procedures/{procedureId} {
      allow read: if isSignedIn();
      allow create, update, delete: if hasAnyRole(['admin', 'billing']);
    }
  }
}
